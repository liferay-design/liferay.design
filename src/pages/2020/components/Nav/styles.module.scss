@import '~theme/variables';
@import '../../styles.module.scss';

@mixin for-small-desktop {
	@media screen and (max-width: 1360px) and (min-width: 600px) {
		@content;
	}
}

@mixin mainBg {
	background: rgba($white, 0.01);
	backdrop-filter: blur(16px);
}
// Desicon
.desicon {
	display: none;
}

// ANCHOR LINKS
.anchorLinks {
	position: fixed;
	opacity: 1;
	z-index: 100;
	bottom: 0;
	right: 0;
	.menuButton {
		@include mainBg;
		transition: transform 0.15s ease-in-out, border-radius 0.15s ease-in-out;
		transform-origin: 43% 50%;
		span {
			position: absolute;
			transform: rotate(-90deg);
			text-transform: uppercase;
			letter-spacing: 0.3em;
			color: $twentyTwentyBlue;
		}
		&:focus {
			background: rgba($black, 0.8);
			span {
				color: $white;
			}
		}
	}
	.linkWrapper {
		transform: translateX(100%);
		transition: 0.1s ease-out;
	}
	a {
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100px;
		height: 32px;
		margin: 24px 0;
		transform: translateX(100%);
		transition: ease-out;
		@for $i from 1 through 5 {
			&:nth-of-type(#{$i}) {
				transition-duration: 0.3s - (($i - 1) * 0.05s);
			}
		}
		.anchorBlock {
			--size: 4px;
			width: var(--size);
			height: var(--size);
			border-radius: calc(var(--size) / 2);
			background: rgba($grayHeader, 0.1);
			backdrop-filter: var(--blur);
			position: absolute;
		}
		.anchorText {
			@include mainBg;
			background: rgba($black, 0.8);
			position: absolute;
			width: auto;
			color: $lightBlue;
			padding: 4px 24px 4px 16px;
			border-radius: 16px;
			pointer-events: none;
			right: 3px;
			transition: opacity ease-in-out 0.1s;
			&:before {
				content: '';
				background-image: url("data:image/svg+xml,%3Csvg width='5' height='8' viewBox='0 0 5 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1L4 4L1 7' stroke='%230B5FFF' stroke-linecap='round'/%3E%3C/svg%3E%0A");
				position: absolute;
				right: 12px;
				transform: rotate(180deg);
				top: 11px;
				width: 5px;
				height: 8px;
			}
		}
	}
	// NAV OPEN STYLES
	&:global(.navOpen) {
		.menuButton {
			transform: scale(0.5);
			border-radius: 2rem 0 0 2rem;
			background: rgba($black, 0.8);
			span {
				opacity: 0;
			}
			&:before {
				content: '';
				background-image: url("data:image/svg+xml,%3Csvg width='26' height='26' viewBox='0 0 26 26' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M24.293 25.7071L13.0001 14.4142L1.70718 25.7071L0.292969 24.2929L11.5859 13L0.292969 1.70712L1.70718 0.292908L13.0001 11.5858L24.293 0.292908L25.7072 1.70712L14.4143 13L25.7072 24.2929L24.293 25.7071Z' fill='%23fff'/%3E%3C/svg%3E%0A");
				background-position: center;
				background-repeat: no-repeat;
				position: absolute;
				top: 0;
				right: 0;
				bottom: 0;
				left: 0;
				display: flex;
				justify-content: center;
				align-items: center;
			}
			&:focus {
				box-shadow: 0 0 0.5rem -0.2rem rgba($primary, 0.9);
			}
		}
		.linkWrapper {
			transform: translateX(0);
			a {
				transform: translateX(0);
			}
		}
	}
}

@for $i from 1 through 5 {
	.linkWrapper > a {
		&:nth-child(#{$i}) {
			animation-delay: 1.6s + ($i * (1s / 10));
		}
	}
}

@include for-tablet-portrait-up {
	.desicon {
		display: initial;
		position: fixed;
		top: $spacingBase;
		transform: translateX($spacingBase - 0.5rem);
		animation: animateIn 0.8s ease-in-out 1.5s forwards;
		opacity: 0;
		left: -$spacingMedium;
	}

	.linkWrapper > a {
		animation: animateIn 1s ease-in-out forwards;
		opacity: 0;
		left: -$spacingMedium;
	}
	.anchorLinks {
		left: $spacingBase - 0.625rem;
		right: unset;
		top: 50vh;
		.menuButton {
			display: none;
		}
		.linkWrapper {
			bottom: unset;
			top: 0;
			left: 0;
			right: unset;
			transform: translateY(-50%);
			a {
				margin: 0;
				transform: translateX(0);
				.anchorBlock {
					left: $spacingSmall;
					backdrop-filter: initial;
				}
				.anchorText {
					backdrop-filter: initial;
					right: unset;
					left: $spacingXSmall * 2;
					background: transparent;
					color: $grayParagraph;
					padding: ($spacingSmall / 4) $spacingSmall ($spacingSmall / 4)
						($spacingSmall + $spacingXSmall);
					@include for-small-desktop() {
						opacity: 0;
					}
					&:before {
						left: 12px;
						right: unset;
						transform: rotate(0deg);
						opacity: 0;
					}
				}
				&:hover,
				&:focus {
					.anchorText {
						background: $white;
						color: $lightBlack;
						opacity: 1 !important;
						&:before {
							opacity: 1;
						}
					}
				}
			}
			&:hover a .anchorText,
			&:focus-within a .anchorText {
				opacity: 1;
			}
			@include for-small-desktop {
				&:hover {
					background: rgba($darkBlack, 0.8);
					box-shadow: 0 0 8rem 8rem rgba($darkBlack, 0.8);
				}
			}
		}
	}
	@for $i from 1 through 5 {
		.linkWrapper > a {
			&:nth-child(#{$i}) {
				animation-delay: 1.6s + ($i * (1s / 10));
			}
		}
	}
}

@keyframes animateIn {
	to {
		opacity: 1;
		left: 0;
	}
}
